.TH LEDGERPLOT 1 ledgerplot\-VERSION
.SH NAME
ledgerplot \- create gnuplot charts from ledger data
.SH SYNOPSIS
.B ledgerplot
.RB [ \-v ]
.SH DEPENDS ON
The cli ledger application called ledger.
More info at http://www.ledger-cli.org/.
Only version 3.0 is supported, not the 2.6.3 version.
.SH DESCRIPTION
ledgerplot is a c program, that calls the ledger application and parses it's output.
That data is then written to a temporary data file and a graph is created with that data.
Several plot types are supported, including: income vs expenses, expenses per category, ...
The plots are exported to png files, in the same directory where the ledgerplot application
is started.
.SH OPTIONS
.TP
.B \--help
Prints basic usage info to standard output, then exits.
.B \--version
Prints version information to standard output, then exits.
.B \--verbose
Prints information to standard output, while the program is running. By default, the program does not display anything.
.B \-\-file=<filename>
Used to specify the ledger dat file to query.
.B \-\-startyear=<year_start>
Start year for the ledger query.
.B \-\-endyear=<year_end>
End year for the ledger query.
.B \-\-income_vs_expenses
One of the possible charts we can make: income vs expenses.
.B \-\-income_per_category
Not implemented yet! One of the possible charts we can make: income per category.
.B \-\-expenses_per_category
Not implemented yet! One of the possible charts we can make: expenses per category.
.B \-\-yearly
Yearly totals are used.
.B \-\-quarterly
Not implemented yet! Quarterly totals, for each year, are used.
.B \-\-monthly
Not implemented yet! Monthly totals are used.
.B \-\-weekly
Not implemented yet! Weekly totals are used.
.SH USAGE
.SH SEE ALSO
.BR ledger (1)
.BR gnuplot (1)
.SH CUSTOMIZATION
ledgerplot is customized by creating a custom config.h and (re)compiling the source
code. You can also change the gnuplot scripts, though this might break the application if you don't know what you are doing.
.SH BUGS
TBD
.SH EXAMPLES
ledgerplot --file=/home/johnny/ledger/ledger.dat --startyear=2014 --endyear=2015
